C51 COMPILER V9.57.0.0   LAB5                                                              01/13/2018 21:29:48 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE LAB5
OBJECT MODULE PLACED IN .\Objects\lab5.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lab5.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lab5
                    -.lst) TABS(2) OBJECT(.\Objects\lab5.obj)

line level    source

   1          #include <REGX51.H>
   2          #include <string.h>
   3          #define RS P1_0
   4          #define RW P1_1
   5          #define E  P1_2
   6          #define DB P2
   7          #define DBPORT P2
   8          
   9          void init(void);
  10          void wrcgram(void);
  11          void position(char line,column);
  12          void LCD_CMD(char cmd);
  13          void LCD_DATA(char data1);
  14          void wrins(char instruction);
  15          void display(char *string);
  16          void wrdata(char d);  
  17          void delayms(unsigned int time);
  18          void DISP_Str(char addr1,char *str);
  19          void RL_Str(char addr1,char *str,char offset);
  20          void RL_Str2(char addr2,char *str2,char offest2);
  21          
  22          code char pattern[]={0x00,0x18,0x08,0x08,0x08,0x08,0x08,0x18,0x1f,0x00,0x0e,0x11,0x11,0x0e,0x00,0x1f,0x00,
             -0x03,0x02,0x02,0x02,0x02,0x02,0x03};
  23          code char string1[]={0x0a,0x09,0x08,0x00};
  24          code char string2[]={"NTUST is the best "};
  25          code char string3[]={"INT0 happens      "};
  26          code char string4[]={"INT1 happens      "};
  27          char str_display[16];
  28          int x=1;
  29          int z,j,k;
  30          int j_temp,k_temp;
  31          int cnt;
  32          
  33          void main(void){
  34   1        TCON=5;
  35   1        IE=0x85;
  36   1        PX0=1;
  37   1        init();
  38   1        wrcgram();
  39   1        
  40   1        while(1){
  41   2          for(z=0;z<strlen(string2);z++){
  42   3          wrins(0x01);
  43   3          delayms(1);
  44   3          RL_Str(0x80,string2,z);
  45   3          delayms(500);
  46   3          }
  47   2        }
  48   1      }
  49          void EXINT0(void) interrupt 0{
  50   1        cnt=0;
  51   1        if(j_temp>=strlen(string3)-1)
  52   1          j_temp=0;
  53   1        for(j=j_temp;j<strlen(string3);j++){
C51 COMPILER V9.57.0.0   LAB5                                                              01/13/2018 21:29:48 PAGE 2   

  54   2          wrins(0x01);
  55   2          delayms(1);
  56   2          RL_Str(0x80,string3,j);
  57   2          delayms(500);
  58   2          if(cnt<4){
  59   3            cnt++;
  60   3          }else {
  61   3            j_temp=j;
  62   3            break;
  63   3          }
  64   2        }           
  65   1      }
  66          void EXINT1(void) interrupt 2{
  67   1        cnt=0;
  68   1        if(k_temp>=strlen(string4)-1)
  69   1          k_temp=0;
  70   1        for(k=k_temp;j<strlen(string4);k++){
  71   2          wrins(0x01);
  72   2          delayms(1);
  73   2          RL_Str(0x80,string4,k);
  74   2          delayms(500);
  75   2          if(cnt<4){
  76   3            cnt++;
  77   3          }else {
  78   3            k_temp=k;
  79   3            break;
  80   3          }
  81   2        }
  82   1      }
  83          void RL_Str(char addr1,char *str,char offset){
  84   1        char i;
  85   1        char *start=str;
  86   1        str+=offset;
  87   1        LCD_CMD(addr1);
  88   1        while(*str !=0)
  89   1          LCD_DATA(*str++);
  90   1        for(i=0;i<offset;i++)
  91   1          LCD_DATA(start[i]);
  92   1      }
  93          void RL_Str2(char addr2,char *str2,char offset2){
  94   1        char i2;
  95   1        char *start2=str2;
  96   1        str2+=offset2;
  97   1        LCD_CMD(addr2);
  98   1        while(*str2!=0)
  99   1          LCD_DATA(*str2++);
 100   1        for(i2=0;i2<offset2;i2++)
 101   1          LCD_DATA(start2[i2]);
 102   1      }
 103          void RR_Str(char addr1,char *str,char offset){
 104   1        char i;
 105   1        char *start=str;
 106   1        LCD_CMD(addr1);
 107   1        str+=offset;
 108   1        while(*str !=0)
 109   1          LCD_DATA(*str++);
 110   1        for(i=0;i<20-offset;i++)
 111   1          LCD_DATA(start[i]);
 112   1      }
 113          void DISP_Str(char addr1,char *str){
 114   1        LCD_CMD(addr1);
 115   1        while(*str != 0)
C51 COMPILER V9.57.0.0   LAB5                                                              01/13/2018 21:29:48 PAGE 3   

 116   1          LCD_DATA(*str++);
 117   1      }
 118          void LCD_CMD(char cmd){
 119   1        char i;
 120   1        DBPORT=cmd;
 121   1        RS=0; RW=0; E=1;
 122   1        for(i=0;i<40;i++);
 123   1        RS=0; RW=0; E=0;
 124   1      }
 125          void LCD_DATA(char data1){
 126   1        char i;
 127   1        DBPORT=data1;
 128   1        RS=1; RW=0; E=1;
 129   1        for(i=0;i<40;i++);
 130   1        RS=1; RW=0; E=0;
 131   1      }
 132          void init(void){
 133   1        delayms(30);
 134   1        wrins(0x38);
 135   1        wrins(0x38);
 136   1        wrins(0x38);
 137   1        wrins(0x38);
 138   1        wrins(0x08);
 139   1        wrins(0x01);
 140   1        wrins(0x06);
 141   1        wrins(0x0c);
 142   1      }
 143          void wrcgram(void){
 144   1        char m;
 145   1        wrins(0x40);
 146   1        for(m=0; m<24; m++ )
 147   1          wrdata(pattern[m]);
 148   1      }
 149          void position(char line,column){
 150   1        unsigned char instruction;
 151   1        line--;
 152   1        column--;
 153   1        instruction=0x80+(0x40*line + column);
 154   1        wrins(instruction);
 155   1      }
 156          void wrins(char instruction){
 157   1        RS=0;
 158   1        RW=0;
 159   1        E=0;
 160   1        delayms(1);
 161   1        E=1;
 162   1        DB=instruction;
 163   1        delayms(1);
 164   1        E=0;
 165   1        delayms(8);
 166   1      }
 167          void display(char *string){
 168   1        char k=0;
 169   1        while(string[k] !=0x00 )
 170   1         {
 171   2           wrdata(string[k]);
 172   2           k++;
 173   2         }
 174   1      }
 175          void wrdata(char d){
 176   1        RS=1;
 177   1        RW=0;
C51 COMPILER V9.57.0.0   LAB5                                                              01/13/2018 21:29:48 PAGE 4   

 178   1        E=0;
 179   1        delayms(1);
 180   1        E=1;
 181   1        DB=d;
 182   1        delayms(1);
 183   1        E=0;
 184   1        delayms(1);
 185   1      }
 186          void delayms(unsigned int time){
 187   1        unsigned int n;
 188   1        while(time>0)
 189   1         {
 190   2           n=120;
 191   2           while(n>0)  n--;
 192   2           time--;
 193   2         }
 194   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1061    ----
   CONSTANT SIZE    =     85    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30      37
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
